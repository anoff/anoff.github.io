<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Andreas Offenhaeuser</title><link>https://anoff.io/project/</link><description>Recent content in Projects on Andreas Offenhaeuser</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 28 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://anoff.io/project/index.xml" rel="self" type="application/rss+xml"/><item><title>devradar</title><link>https://anoff.io/project/devradar/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://anoff.io/project/devradar/</guid><description>For a while I have been looking for a way to thoroughly document and present my experiences with various tools and frameworks. After introducing the techradar concept at work I set out to build my own techradar with VueJS and Google Firebase. Mid of 2019 I started turning this personal application into a solution for others to use. Adding additional backend types to the original Firebase solution I am now hosting a free to use editor for everyone at editor.</description></item><item><title>remote-code</title><link>https://anoff.io/project/remote-code/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://anoff.io/project/remote-code/</guid><description>Automatically sync sourcecode from one computer to another and execute the code remotely. This is a CLI I built to be able to develop Node.js programs on my develop machine and execute them on a raspberry pi without having to set up rsync and autoreload manually all the time.</description></item><item><title>plantbuddy</title><link>https://anoff.io/project/plantbuddy/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://anoff.io/project/plantbuddy/</guid><description>Wanting to develop a small IoT solution I built plantbuddy as a standalone solution with device code written in C for ESP8266 microcontrollers, using Googles Firebase infrastructure as a database and VueJS as a frontend. See repository for details on the system design.</description></item><item><title>demo one</title><link>https://anoff.io/project/demo-one/</link><pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate><guid>https://anoff.io/project/demo-one/</guid><description>Spending a weekend at the worldâ€™s largest demo party (revision 2018) I learned the basics of drawing on a 2D canvas with C++ and how to build basic 3D raytracing and texture mapping on spheres. No graphic libraries - just code. Check out the demo link to see the C++ code rendered in a browser using WASM.</description></item><item><title>dancing emojis</title><link>https://anoff.io/project/dancing-emojis/</link><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid>https://anoff.io/project/dancing-emojis/</guid><description>Inspired by a talk during jsconf.eu 2017 I wanted to give audio visualization a try. Open it up in your browser and see emojis dance to your voice - or whatever sound you have going on in the room.</description></item><item><title>#robby5</title><link>https://anoff.io/project/robby5/</link><pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate><guid>https://anoff.io/project/robby5/</guid><description>Long term project trying to bring Node.js on robots to a higher level and integrate it with ROS. Trying out different cheap hardware components, bringing together resources in one repository needed to create a robot fullstack from hardware to control logic. This is more of a collaboration project than a single working solution. Check out the repository to see the different robot systems I implemented in there.</description></item><item><title>Microllaborators</title><link>https://anoff.io/project/microllaborators/</link><pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate><guid>https://anoff.io/project/microllaborators/</guid><description>During a 24h hackathon two of us built this distributed web app with augmented reality features. The solution should enable teachers to get feedback anonymously from everyone in the class without the need for additional expensive equipment. To participate you need a phone with a browser capable of WebRTC (currently not supported by Safari 2017-05). Check out the demo and the explanation on the github repo.</description></item></channel></rss>